{"version":3,"sources":["BidForm.js","App.js","reportWebVitals.js","index.js"],"names":["Row","props","useRowStyles","makeStyles","root","borderBottom","row","React","useState","open","setOpen","classes","Fragment","TableRow","className","TableCell","IconButton","aria-label","size","onClick","component","scope","item_id","name","unit","stock","align","p_org","p_min","style","paddingBottom","paddingTop","colSpan","Collapse","in","timeout","unmountOnExit","Box","margin","Typography","variant","gutterBottom","Table","TableHead","TableBody","history","map","historyRow","date","BidForm","state","bidder","bp","rows","showTable","handleChange","bind","handleSubmit","fetchData","createData","CollapsibleTable","this","event","setState","target","value","console","log","preventDefault","axios","post","then","response","alert","data","message","error","get","items","b_history","TableContainer","Paper","onSubmit","type","onChange","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ff12b752.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport axios from 'axios';\n//import PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\n\n\nfunction Row(props) {\n  const useRowStyles = makeStyles({\n    root: {\n      '& > *': {\n        borderBottom: 'unset',\n      },\n    },\n  });\n  const { row } = props;\n  const [open, setOpen] = React.useState(false);\n  const classes = useRowStyles();\n\n  return (\n    <React.Fragment>\n      <TableRow className={classes.root}>\n        <TableCell>\n          <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </TableCell>\n        <TableCell component=\"th\" scope=\"row\">\n          {row.item_id}\n        </TableCell>\n        <TableCell component=\"th\" scope=\"row\">{row.name}</TableCell>\n        <TableCell component=\"th\" scope=\"row\">{row.unit}</TableCell>\n        <TableCell component=\"th\" scope=\"row\">{row.stock}</TableCell>\n        <TableCell align=\"right\">{row.p_org}</TableCell>\n        <TableCell align=\"right\">{row.p_min}</TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={7}>\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            <Box margin={1}>\n              <Typography variant=\"h6\" gutterBottom component=\"div\">\n                過去所有出價：\n              </Typography>\n              <Table size=\"small\" aria-label=\"purchases\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell component=\"th\" scope=\"row\">出價</TableCell>\n                    <TableCell component=\"th\" scope=\"row\">工號</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {row.history.map((historyRow) => (\n                    <TableRow key={historyRow.date}>\n                      <TableCell component=\"th\" scope=\"row\">\n                        {historyRow[0]}\n                      </TableCell>\n                      <TableCell component=\"th\" scope=\"row\">{historyRow[1]}</TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </Box>\n          </Collapse>\n        </TableCell>\n      </TableRow>\n    </React.Fragment>\n  );\n}\n\n\n\n\n\nclass BidForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bidder: '',\n      item_id: '',\n      bp: '',\n      rows: [],\n      showTable: false,\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.fetchData = this.fetchData.bind(this);\n    this.createData = this.createData.bind(this);\n    this.CollapsibleTable = this.CollapsibleTable.bind(this);\n  }\n  componentDidMount(){\n    this.fetchData();\n  }\n\n\n  // rows = [\n  // createData('Frozen yoghurt', 159, 6.0, 24, 4.0, 3.99),\n  // createData('Ice cream sandwich', 237, 9.0, 37, 4.3, 4.99),\n  // createData('Eclair', 262, 16.0, 24, 6.0, 3.79),\n  // createData('Coco Cupcake', 305, 3.7, 67, 4.3, 2.5),\n  // createData('Gingerbread', 356, 16.0, 49, 3.9, 1.5),\n  // ];\n\n\n  handleChange(event) {\n    this.setState({[event.target.name] : event.target.value});\n  }\n\n  handleSubmit(event) {\n    console.log(this.state.bidder+', '+this.state.item_id+', '+this.state.bp);\n    event.preventDefault();\n\n    axios.post('https://161.35.116.242/postBid/', {\n      bidder: this.state.bidder,\n      item_id: this.state.item_id,\n      bp: this.state.bp\n    })\n      .then((response) => {\n      alert(response.data.message);\n      this.fetchData();\n    }, (error) => {\n      console.log(error);\n    });\n  }\n  fetchData(event){\n    this.setState({showTable:false});\n    axios.get('https://161.35.116.242/getItems/')\n      .then((response) => {\n      //console.log(response.data.items);\n      this.setState({rows: response.data.items.map((row) => this.createData(row[0],row[1],row[2],row[3],row[4],row[5],row[6]))});\n      this.setState({showTable:true});\n      //console.log(this.state.showTable);\n      //this.state.rows  = this.state.server_data.map((row) => this.createData(row[0],row[1],row[2],row[3],row[4]));\n      //console.log(this.rows);\n    }, (error) => {\n      console.log(error);\n    });\n  }\n\n  createData(item_id, name, unit, stock, p_org, p_min, b_history) {\n  return {\n    item_id,\n    name,\n    unit,\n    stock,\n    p_org,\n    p_min,\n    history:b_history.map((row)=> [row,'隱藏'])\n    // history: [\n    //   { date: '2020-01-05', customerId: '11091700', amount: 3 },\n    //   { date: '2020-01-02', customerId: 'Anonymous', amount: 1 },\n    // ],\n\n\n  };\n}\n\n  CollapsibleTable() {\n    return (\n      <TableContainer component={Paper}>\n        <Table aria-label=\"collapsible table\">\n          <TableHead>\n            <TableRow>\n              <TableCell />\n              <TableCell>商品代號</TableCell>\n              <TableCell component=\"th\" scope=\"row\">名稱</TableCell>\n              <TableCell component=\"th\" scope=\"row\">單位</TableCell>\n              <TableCell component=\"th\" scope=\"row\">數量</TableCell>\n              <TableCell align=\"right\">原購價</TableCell>\n              <TableCell align=\"right\">競標底價</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {this.state.rows.map((row) => (\n              <Row key={row.name} row={row} />\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    );\n  }\n\n\n\n\n\n\n\n\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"wrapper\">\n          <h1>競標表單</h1>\n          <form onSubmit={this.handleSubmit}>\n            <fieldset>\n              <label>\n                <p>工號：</p>\n                <input type=\"text\" name=\"bidder\" value={this.state.bidder} onChange={this.handleChange} />\n              </label>\n            </fieldset>\n            <fieldset>\n              <label>\n                <p>商品代號 （1~13）：</p>\n                <input type=\"text\" name=\"item_id\" value={this.state.item_id} onChange={this.handleChange} />\n              </label>\n            </fieldset>\n            <fieldset>\n              <label>\n                <p>出價 （新台幣）：</p>\n                <input type=\"text\" name=\"bp\" value={this.state.bp} onChange={this.handleChange} />\n              </label>\n            </fieldset>\n            <input type=\"submit\" value=\"送出表單\" />\n          </form>\n        </div>\n        <div className=\"greenpaper\">\n        <button onClick={this.fetchData} className=\"greenButton\">\n        重新整理\n        </button>\n          {this.state.showTable ? (this.CollapsibleTable()):(<p>資料載入中......</p>)}\n        </div>\n      </div>\n\n    );\n  }\n}\n\nexport default BidForm;","import './App.css';\nimport BidForm from './BidForm.js'\n\n\nfunction App() {\n  return (\n    <div className=\"Auction_App\">\n      <BidForm/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}